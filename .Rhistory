pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
View(durations)
#remove NA
durations <- na.omit(durations)
#reorganize data
durations <- durations %>%
pivot_longer(cols = c("durationNL", "durationFLE", "durationFOF"),
names_to = "Event", values_to = "DOY")
View(durations)
durations <- durations%>%
pivot_wider(names_from = Treatment, values_from = DOY)
View(durations)
durations <- na.omit(durations)
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
pheno <- pheno%>%
group_by(Site, Block, Treatment, Species)%>%
summarise(NL= mean(NL, na.rm = T),
FLE= mean(FLE, na.rm = T),
FOF= mean(FOF, na.rm = T),
FLCC= mean(FLCC, na.rm = T))
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
#remove NA
durations <- na.omit(durations)
#reorganize data
durations <- durations %>%
pivot_longer(cols = c("durationNL", "durationFLE", "durationFOF"),
names_to = "Event", values_to = "DOY")
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
pheno <- pheno%>%
group_by(Site, Block, Treatment, Species)%>%
summarise(NL= mean(NL, na.rm = T),
FLE= mean(FLE, na.rm = T),
FOF= mean(FOF, na.rm = T),
FLCC= mean(FLCC, na.rm = T))
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
#remove NA
durations <- na.omit(durations)
#reorganize data
durations <- durations %>%
pivot_longer(cols = c("durationNL", "durationFLE", "durationFOF"),
names_to = "Event", values_to = "duration")
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
pheno <- pheno%>%
group_by(Site, Block, Treatment, Species)%>%
summarise(NL= mean(NL, na.rm = T),
FLE= mean(FLE, na.rm = T),
FOF= mean(FOF, na.rm = T),
FLCC= mean(FLCC, na.rm = T))
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
#remove NA
durations <- na.omit(durations)
#reorganize data
durations <- durations %>%
pivot_longer(cols = c("durationNL", "durationFLE", "durationFOF"),
names_to = "Event", values_to = "duration")
durations <- durations%>%
pivot_wider(names_from = Treatment, values_from = duration)
durations <- na.omit(durations)
View(durations)
durations <- durations%>%
pivot_longer(cols = c("Control", "Treatment"),
names_to = "Treatment", values_to = "duration")
View(durations)
install.packages("plyr")
rm(list=ls())
source("gradient_microclimate_summaries.R")
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
source("gradient_microclimate_summaries.R")
rm(list=ls())
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
source("gradient_microclimate_summaries.R")
source("gradient_microclimate_summaries.R")
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
source("gradient_microclimate_summaries.R")
rm(list=ls())
install.packages("reshape2")
rm(list=ls())
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
source("gradient_microclimate_summaries.R")
library(tidyverse)
library(plyr)
pheno_microclimate <- raw.swc %>%
group_by(Year, Site, DOY, Treatment) %>%
dplyr::summarise(daily_mean_swc = mean(Measurement, na.rm = T))
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
source("gradient_microclimate_summaries.R")
source("/Users/chelseawilmer/Desktop/Github/Phenology/gradient_microclimate_summaries.R")
rm(list=ls())
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
source("/Users/chelseawilmer/Desktop/Github/Phenology/gradient_microclimate_summaries.R")
pheno_microclimate <- raw.swc %>%
group_by(Year, Site, DOY, Treatment) %>%
dplyr::summarise(daily_mean_swc = mean(Measurement, na.rm = T))
View(pheno_microclimate)
pheno_microclimate <- raw.swc %>%
group_by(Year, Site, Block, DOY, Treatment) %>%
dplyr::summarise(daily_mean_swc = mean(Measurement, na.rm = T))
View(pheno_microclimate)
pheno_microclimate <- raw.swc %>%
group_by(Year, Site, Block, Treatment,  DOY) %>%
dplyr::summarise(daily_mean_swc = mean(Measurement, na.rm = T))
View(pheno_microclimate)
pheno_microclimate <- filter(pheno_microclimate, Year == 2018)
View(pheno_microclimate)
pheno_microclimate <- filter(pheno_microclimate, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA" Year == 2018)
pheno_microclimate <- filter(pheno_microclimate, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA" | Year == 2018)
pheno_microclimate$Site <- factor(pheno_microclimate$Site, levels = c(USA", "LSA", "UM", "LM"))
pheno_microclimate$Site <- factor(pheno_microclimate$Site, levels = c("USA", "LSA", "UM", "LM"))
View(pheno_microclimate)
rm(list=ls())
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
source("/Users/chelseawilmer/Desktop/Github/Phenology/gradient_microclimate_summaries.R")
library(tidyverse)
library(plyr)
pheno_microclimate <- raw.swc %>%
group_by(Year, Site, Block, Treatment,  DOY) %>%
dplyr::summarise(daily_mean_swc = mean(Measurement, na.rm = T))
pheno_microclimate <- filter(pheno_microclimate, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA" | Year == 2018)
View(pheno_microclimate)
rm(list=ls())
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
source("/Users/chelseawilmer/Desktop/Github/Phenology/gradient_microclimate_summaries.R")
library(tidyverse)
library(plyr)
pheno_microclimate <- raw.swc %>%
group_by(Year, Site, Block, Treatment,  DOY) %>%
dplyr::summarise(daily_mean_swc = mean(Measurement, na.rm = T))
pheno_microclimate <- filter(pheno_microclimate, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA" & Year == 2018)
View(pheno_microclimate)
View(pheno_microclimate)
View(pheno_microclimate)
pheno_microclimate <- filter(pheno_microclimate, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA" & Year == 2018)
View(pheno_microclimate)
pheno_microclimate <- filter(pheno_microclimate, Year == 2018)
View(pheno_microclimate)
pheno_microclimate$Site <- factor(pheno_microclimate$Site, levels = c("USA", "LSA", "UM", "LM"))
rm(list = ls())
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
View(pheno)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
## Date: 2019-01-22
## User: Chelsea Wilmer
## US DOE Phenology Project
## Script: The purpose of this script is to bring in phenology data, explore, and clean up. and have fun.
## Packages:
library(tidyverse)
## 1. Bring in data ####
# Set your working directory
setwd("/Users/chelseawilmer/Desktop/Github/Phenology")
# Load data
pheno <- read.csv("PhenologyData_complete.csv", stringsAsFactors = FALSE, strip.white = TRUE)
# Look at dataset
str(pheno) #check column names, check data types
# Clean up column names
# Use rename to rename columns
# Rename all columns at once
pheno <- rename(pheno, Veg.Type = Veg.type, Functional.Type = functional.type) # new name equals = old name
View(pheno)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
?rename
# Clean up column names
# Use rename to rename columns
# Rename all columns at once
pheno <- dplyr::rename(pheno, Veg.Type = Veg.type, Functional.Type = functional.type) # new name equals = old name
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
View(pheno)
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
View(pheno)
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
View(durations)
#remove NA
durations <- na.omit(durations)
View(durations)
#reorganize data
durations <- durations %>%
pivot_longer(cols = c("durationNL", "durationFLE", "durationFOF"),
names_to = "Event", values_to = "duration")
View(durations)
durations <- durations%>%
pivot_wider(names_from = Treatment, values_from = duration)
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
d
durations <- select(pheno, -c(DOYsf, NL, FLE, FOF, FLCC))
#remove NA
durations <- na.omit(durations)
#reorganize data
durations <- durations %>%
pivot_longer(cols = c("durationNL", "durationFLE", "durationFOF"),
names_to = "Event", values_to = "duration")
durations <- durations%>%
pivot_wider(names_from = Treatment, values_from = duration)
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
View(pheno)
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
#remove NA
durations <- na.omit(durations)
View(durations)
#summarise
durations <- durations%>%
group_by(Year, Site, Block, Treatment, Species)%>%
summarise(mean_NL = mean(durationNL, na.rm = T),
mean_fle = mean(durationFLE, na.rm = T),
mean_fof = mean(durationFOF, na.rm = T))
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
#remove NA
durations <- na.omit(durations)
#summarise
durations <- durations%>%
group_by(Year, Site, Block, Treatment, Species)%>%
summarise(mean_NL = mean(durationNL, na.rm = T),
mean_fle = mean(durationFLE, na.rm = T),
mean_fof = mean(durationFOF, na.rm = T))
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
#remove NA
durations <- na.omit(durations)
View(durations)
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
#summarise
durations <- durations%>%
group_by(Year, Site, Block, Treatment, Species)%>%
summarise(mean_NL = mean(durationNL, na.rm = T),
mean_fle = mean(durationFLE, na.rm = T),
mean_fof = mean(durationFOF, na.rm = T))
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
durations <- select(pheno, -c(NL, FLE, FOF, FLCC))
View(durations)
View(durations)
rm(list = ls())
## Date: 2020-04-10
## User: Chelsea Wilmer
## SFA/CSU Thesis
## Script: Calculating durations
## Packages:
library(tidyverse)
####Bring in phenology data####
source("/Users/chelseawilmer/Desktop/Github/Phenology/Phenology.data.cleanup.R")
#remove columns that we don't need
pheno <- select(pheno, -c(Duplicate.Plot, FBB, FLB))
#filter observations to those that have a vlaue for NL, FLE, FOF, and FLCC
pheno <- filter(pheno, Year == 2018)
pheno <- filter(pheno, Site == "LM" | Site == "UM" | Site == "LSA" | Site == "USA")
####Calculate durations as event2 - event1, event3 - event2 etc####
#calculate NL-DOYsf
pheno$durationNL <- pheno$FLE - pheno$NL
pheno$durationFLE <- pheno$FOF - pheno$FLE
pheno$durationFOF <- pheno$FLCC - pheno$FOF
#pheno$duratinoFLCC <- pheno$x - pheno$FLCC
pheno <- select(pheno, -c(NL, FLE, FOF, FLCC))
#summarise
durations <- pheno%>%
group_by(Year, Site, Block, Treatment, Species)%>%
summarise(mean_NL = mean(durationNL, na.rm = T),
mean_fle = mean(durationFLE, na.rm = T),
mean_fof = mean(durationFOF, na.rm = T))
